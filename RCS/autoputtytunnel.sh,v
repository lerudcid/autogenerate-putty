head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2012.01.09.23.24.43;	author root;	state Exp;
branches;
next	1.1;

1.1
date	2012.01.09.23.23.54;	author root;	state Exp;
branches;
next	;


desc
@@


1.2
log
@*** empty log message ***
@
text
@#!/bin/sh

# Check that the input exists and set vars. Exits if input does not contain 
# two arguments. If it fails it prints a help statement.

# The program expects 2 arguments 
# $1 is the username 
# $2 is the rdp box fqdn 

if [ $# != 2 ]; then
    echo "Usage: $0 <username> <fqdn>"
    exit 0;
fi

user=$1
fqdn=$2

tmp="/tmp/rdesk.$$"
mkdir $tmp

# makes opensshkey with comment of the fqdn 
ssh-keygen -C "$fqdn" -t rsa -b 2048 -f $tmp/tunnelonly


#This line adds magic voodoo to the public key limiting its function
echo "permitopen=\"$fqdn:3389\",command=\"/bin/sh -c 'echo -n You are now connected. Please wait for the remote desktop connection to be made. Closing this window will cause the remote desktop connection to be broken.; while true; do sleep 3600; done'\",no-pty,no-agent-forwarding,no-X11-forwarding " >> $tmp/${user}_tunnelonly.pub

cat $tmp/tunnelonly.pub >> $tmp/${user}_tunnelonly.pub


# Logic for appending the key to the users auth key files or /tmp
if [ "$user" = "$USER" ] ; then
    
    echo "\nThe public key has been appened to your authorizedkeys2 file\n"
    cat $tmp/${user}_tunnelonly.pub >> ~/.ssh/authorized_keys2
else
    cp $tmp/${user}_tunnelonly.pub /tmp/${user}_tunnelonly.pub.$$
    echo "\na copy of the public key has been left in /tmp/${user}_tunnelonly.pub.$$. It needs to added to $user's authorized_keys2 file\n"
fi


# Puts a copy of the remote_desktop folder in /tmp to me modify and emailed.
cp -r /pkgs/cat/autoPortablePutty/remote_desktop $tmp/rdp

# This line converts the private openssh key to the putty standard
eval '/pkgs/putty/puttygen' $tmp/tunnelonly \
    -o $tmp/rdp/PuttyPortable/keys/${user}_tunnelonly.ppk

mv $tmp/${user}_tunnelonly.pub \
    $tmp/rdp/PuttyPortable/keys/${user}_tunnelonly.pub

# copy's default reg settings to putty.reg
cat /pkgs/cat/autoPortablePutty/remote_desktop/PuttyPortable/Data/settings/masterreg \
    >> $tmp/rdp/PuttyPortable/Data/settings/putty.reg

#this section changes the regkey file that stores port putty settings
sed -i "s/_username_/$user/" \
    $tmp/rdp/PuttyPortable/Data/settings/putty.reg 

sed -i "s/_rdpbox_/$fqdn/" \
    $tmp/rdp/PuttyPortable/Data/settings/putty.reg 

sed -i "s/_keypath_/${user}_tunnelonly.ppk/" \
    $tmp/rdp/PuttyPortable/Data/settings/putty.reg

# copies the windows batch script from the parent folder
# and renames it to include the box fqdn
mv $tmp/rdp/PuttyPortable/rdp.bat \
    $tmp/rdp/rdp_to_$fqdn.bat

# compress the entire portable putty directory
(
cd $tmp
zip -qr  rdp.zip rdp
)

# email the user a copy of the zip
echo "To remote desktop to $fqdn, please download and unzip the attached zipfile. Then double click on rdp_to_$fqdn.bat" \
    | mutt -s "How to remote desktop into $fqdn without VPN Connetion" -c johnj@@cat.pdx.edu -a $tmp/rdp.zip -- $user@@cecs.pdx.edu 

# postrun removes the modified remote_desktop and the .zip in /tmp
rm -rf $tmp
 
@


1.1
log
@Initial revision
@
text
@a1 1
	
d6 4
d11 2
a12 2
	printf "script requires 2 varibles username and fqdn of the rdp box"
	exit 0;
d15 5
a19 3
# The program expects 2 arguments 
# $1 is the username 
# $2 is the rdp box fqdn 
d22 1
a22 1
ssh-keygen -C "$2" -t rsa -b 2048 -f /tmp/tunnelonly
a23 2
# This line converts the private openssh key to the putty standard
eval '/pkgs/putty/puttygen' /tmp/tunnelonly -o /tmp/$1_tunnelonly.ppk
d26 3
a28 2
printf "permitopen=\"$2:3389\",command=\"/bin/sh -c 'echo -n You are now connected. Please wait for the remote desktop connection to be made. Closing this window will cause the remote desktop connection to be broken.; while true; do sleep 3600; done'\",no-pty,no-agent-forwarding,no-X11-forwarding " >> /tmp/$1_tunnelonly.pub
cat /tmp/tunnelonly.pub >> /tmp/$1_tunnelonly.pub
d32 1
a32 2
if [ "$1" = "$USER" ] ;
 then
d34 2
a35 2
printf "\nThe public key has been appened to your authorizedkeys2 file\n"
cat /tmp/$1_tunnelonly.pub >> ~/.ssh/authorized_keys2
d37 2
a38 3
mkdir /tmp/$1
cp /tmp/$1_tunnelonly.pub /tmp/$1/$1_tunnelonly.pub
printf "\na copy of the public key has been left in /tmp/$1. It needs to added to $1's authorized_keys2 file\n"
d41 1
d43 5
a47 1
cp -r /pkgs/cat/autoPortablePutty/remote_desktop /tmp/remote_desktop
d49 2
a50 3
# Moves the keys to the keys subfolder in portable putty
mv /tmp/$1_tunnelonly.ppk /tmp/remote_desktop/PuttyPortable/keys/$1_tunnelonly.ppk
mv /tmp/$1_tunnelonly.pub /tmp/remote_desktop/PuttyPortable/keys/$1_tunnelonly.pub
d53 2
a54 1
cat /pkgs/cat/autoPortablePutty/remote_desktop/PuttyPortable/Data/settings/masterreg >> /tmp/remote_desktop/PuttyPortable/Data/settings/putty.reg
d57 2
a58 1
sed -i "s/_username_/$1/" /tmp/remote_desktop/PuttyPortable/Data/settings/putty.reg 
d60 2
a61 1
sed -i "s/_rdpbox_/$2/" /tmp/remote_desktop/PuttyPortable/Data/settings/putty.reg 
d63 2
a64 1
sed -i "s/_keypath_/$1_tunnelonly.ppk/" /tmp/remote_desktop/PuttyPortable/Data/settings/putty.reg
d68 2
a69 1
cp /pkgs/cat/remote_desktop/PuttyPortable/rdp.bat /tmp/remote_desktop/rdp_to_$2.bat
d72 4
a75 1
zip -vr /tmp/remote_desktop /tmp/remote_desktop
d78 2
a79 3
printf "To remote desktop to $2, please download and unzip the attached zipfile. Then double click on rdp_to_$2.bat" | mutt -s "How to remote desktop into $2 without VPN Connetion" -c trouble@@cat.pdx.edu -a *.zip -- $1@@cecs.pdx.edu 
# cleanup of temp files
rm /tmp/tunnelonl*
d82 1
a82 2
rm -rf /tmp/remote_desktop
rm /tmp/remote_desktop.zip
@
